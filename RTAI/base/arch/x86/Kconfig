mainmenu "RTAI/x86 configuration"

source "base/arch/Kconfig.hidden"

menu "General"

source "base/arch/Kconfig.general"

choice
	optional
	prompt "Private maintainer profiles"
	depends on RTAI_MAINTAINER

config RTAI_MAINTAINER_NONE
	bool "Use standard settings"

config RTAI_MAINTAINER_PMA
	bool "Use settings from mantegazza()aero!polimi!it"

endchoice

choice
	prompt "Inlining mode of user-space services"
	help
	Allows choosing among:
	- Never inline:         i.e. user-space services are linked to
	  programs against the appropriate support library (e.g. liblxrt.a
	  for user space RTAI syscall services).
	- Eager inlining:       i.e. static inline, always inline regardless
	  of compiler's optimization switch;

config RTAI_LXRT_STATIC_INLINE
	bool "Eager inlining"
	help

config RTAI_LXRT_NO_INLINE
	bool "No inlining"
	help

endchoice

endmenu

menu "Machine (x86 / x86_64)"

config RTAI_DONT_DISPATCH_CORE_IRQS
	bool "Direct vectoring of RTAI native interrupts"
	default y
	help

	RTAI dispatches real time interrupts immediately to achieve as
	low a overhead as possible. Very important on low end CPUs. By
	setting this option it is possible to achieve a further improvement
	by allowing hard RTAI internal timers and SMP interprocessor 
	scheduling interrupts to be vectored directly to their handlers, 
	i.e without any dispatching overhead. A must on low end CPUs.

config RTAI_FPU_SUPPORT
	bool "Enable FPU support"
	default y
	help
	The FPU executes instructions from the processor's normal
	instruction stream. It can handle the types of high-precision
	floating-point processing operations commonly found in
	scientific, engineering, and business applications.  Enabling
	FPU support on a platform providing this hardware component
	may greatly improve performances.  You can obtain more
	information about Float-Point Unit on x86 platform on
	internet at the following URL:
	http://www.intel.com/design/intarch/techinfo/Pentium/fpu.htm

config RTAI_CPUS
	string "Number of CPUs (SMP-only)"
	default 2
	help
	RTAI has native support for Symmetrical Multi-Processing
	machines. If it is your case, you may want to enter here the
	number of CPUs of your motherboard.

	PAY ATTENTION: the default value is 2.

config RTAI_DIAG_TSC_SYNC
	bool "Diagnose out of sync MP-TSCs"
	default n
	help
	Check alignement of MP-TSCs, against a master CPU, and show them in
	the RTAI HAL proc file system (in TSC count units).

config RTAI_MASTER_TSC_CPU
	depends on RTAI_DIAG_TSC_SYNC
	string "Define the master CPU for aligning MP-TSCs"
	default 0
	help
	Master CPU for diagnosis and correction of TSCs alignement.

config RTAI_TUNE_TSC_SYNC
	depends on RTAI_DIAG_TSC_SYNC
	bool "Tune out of sync MP-TSCs"
	default n
	help
	Use offsets made available by enabling the out of sync diagnosis to
	keep readings of TSCs times as aligned as possible.

endmenu

menu "Base system"

menu "Scheduling options"

source "base/arch/Kconfig.sched"

config RTAI_SCHED_8254_LATENCY
	string "8254 tuning latency (ns)"
	default 4700
	help
	The anticipation time to be used to program the hard timer, in oneshot
	mode, for the next scheduling shot in order to compensate for the
	programming overhead needed to determine the right firing time.
	This parameter has no effect when the periodic mode is used.

endmenu

menu "Supported services"

source "base/arch/Kconfig.services"

config RTAI_SHM
	tristate "Shared memory"
	default m
	help
	This RTAI specific module allows sharing memory inter-intra
	real-time tasks and Linux processes. In fact it can be an
	alternative to the SYSTEM V shared memory. It may also be
	noticed that the services are symmetrical, i.e. the same calls
	can be used both in real-time tasks (within the kernel) and
	Linux processes.
	The module will be called rtai_shm.o.

endmenu

menu "Other features"

source "base/arch/Kconfig.other"

config RTAI_MALLOC_HEAPSZ
	string "Size of the global heap (Kbytes)"
	depends on RTAI_MALLOC
	default 2048
	help
	RTAI pre-allocates a global heap as part of its initialization
	chores. This parameter allows to define its size (in
	kilobytes).

endmenu

endmenu

menu "Add-ons"

source "base/arch/Kconfig.addons"

source "base/arch/Kconfig.rtdm"

menu "Drivers"

config RTAI_DRIVERS_SERIAL
	bool "RTAI serial line driver"
	default n
	help
	The RTAI real-time serial driver.
	The module will be called rtai_serial.o.

config RTAI_DRIVERS_16550A
	bool "RTDM based 16550A driver support"
	depends on RTAI_RTDM
	default n
	help
	An alternate RTAI real-time serial driver based on RTDM.
	The module will be called rtai_16550A.o.

choice
	prompt "Hardware access mode"
	depends on RTAI_DRIVERS_16550A
	default RTAI_16550A_PIO
	help
	Allows choosing among:

	- Port based:    driver uses I/O ports, as defined by module vector
			 parameters "io=port1,port2,...".

	- Memory mapped: driver uses memory mapping, as defined by module
			 vector parameters "mem=addr1,addr2,...".

	- Whatever:      the driver can use both I/O and memory mapping, as
			 assigned by "io" and "mem" module vectors parameters,
			 but with only one mode allowed for each device e.g.:
			 "io=0x2F8,0,0x3F8 mem=0,0xe0000000,0"; for devices 1,
			 2 and 3 respectively.

config RTAI_16550A_PIO
	bool "Port based"

config RTAI_16550A_MMIO
	bool "Memory mapped"

config RTAI_16550A_ANY
	bool "Whatever port and memory mix"

endchoice

endmenu

endmenu

menu "RTAI Lab"

source "base/arch/Kconfig.lab"

endmenu
